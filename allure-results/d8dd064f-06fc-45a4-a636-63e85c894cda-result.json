{"name": "test_not_authorized_no_session", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "def test_not_authorized_no_session():\n        # TODO enduser_session is ignored\n        org = orgs_tbl.insert()\n        user = endusers_tbl.insert(org_id=org.Id.value)\n        s_token = session.encode_session(SessionData().build_from(user, 123))\n>       GetAuth(session_token=s_token).request().verify(user_id=user.Id.value)\n\ntests/enduser/test_auth.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nqa/api/enduser/calls.py:20: in verify\n    self.verify_response(resp_body=resp_body)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <qa.api.enduser.calls.GetAuth object at 0x103ff67f0>, error_code = None\nresp_body = {'anonymous': False, 'id': 5329}, ignore_order = False, exclude_paths = None, normalize = False\n\n    def verify_response(self, error_code=None, resp_body=None,\n                        ignore_order=False, exclude_paths=None,\n                        normalize=False):\n        if error_code:\n            assert self.response.status_code == error_code, (\n                f'Unexpected code: {self.response.status_code}'\n            )\n        else:\n>           assert self.response.status_code == 200\nE           AssertionError\n\nqa/tools/caller.py:87: AssertionError"}, "start": 1648640656384, "stop": 1648640656794, "uuid": "54b91f8f-8b49-41dc-a3d8-a225fff77ab7", "historyId": "b9c3dd5c02b8482b0297f9e72c792e54", "testCaseId": "3207f4103b29adbeeb588f7c467a822f", "fullName": "tests.enduser.test_auth#test_not_authorized_no_session", "labels": [{"name": "parentSuite", "value": "tests.enduser"}, {"name": "suite", "value": "test_auth"}, {"name": "host", "value": "Elenas-MacBook-Pro.local"}, {"name": "thread", "value": "59719-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.enduser.test_auth"}]}