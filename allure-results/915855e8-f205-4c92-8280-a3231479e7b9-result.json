{"name": "test_login_with_password", "status": "broken", "statusDetails": {"message": "waiting.exceptions.TimeoutExpired: Timeout of 3 seconds expired waiting for records from EndUserSessions by: {'endUserId': 748}", "trace": "def test_login_with_password():\n        password = generate_string()\n        org = orgs_tbl.insert()\n        user = endusers_tbl.insert(org_id=org.Id.value)\n        endusers_tbl.insert_auth(user_id=user.Id.value, password=password)\n        request = PostLogin(user=user, password=password).request()\n>       session = endusers_tbl.verify_session(user_id=user.Id.value)\n\ntests/enduser/test_login.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nqa/db/enduser/endusers_tbl.py:46: in verify_session\n    actual = get_session(user_id=user_id)\nqa/db/enduser/endusers_tbl.py:39: in get_session\n    return db.get_record(EndUserSession, endUserId=user_id)\nqa/tools/db.py:171: in get_record\n    return self.get_records(model, *criteria, **kwargs)[0]\nqa/tools/db.py:191: in get_records\n    return wait(\n.venv/lib/python3.9/site-packages/waiting/__init__.py:18: in wait\n    for x in iterwait(result=result, *args, **kwargs):\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npredicate = <function Database.get_records.<locals>.filter_records at 0x10424f5e0>, timeout_seconds = 3\nsleep_seconds = 0, result = <waiting._Result object at 0x1041fdd00>\nwaiting_for = \"records from EndUserSessions by: {'endUserId': 748}\", on_poll = None, expected_exceptions = ()\n\n    def iterwait(predicate, timeout_seconds=None, sleep_seconds=1, result=None, waiting_for=None,\n                 on_poll=None, expected_exceptions=()):\n    \n        if not isinstance(expected_exceptions, tuple) and not (isinstance(expected_exceptions, type)\n                                                               and issubclass(expected_exceptions, Exception)):\n            raise IllegalArgumentError(\n                'expected_exceptions should be tuple or Exception subclass')\n        if on_poll is not None and not callable(on_poll):\n            raise IllegalArgumentError(\n                'on_poll should be callable')\n        timeout = _make_deadline(timeout_seconds)\n        if result is None:\n            result = _Result()\n        if waiting_for is None:\n            waiting_for = str(predicate)\n        sleep_generator = _get_sleep_generator(timeout, sleep_seconds)\n        while True:\n            with _end_sleeping(next(sleep_generator)) as cancel_sleep:\n                try:\n                    result.result = predicate()\n                    if on_poll is not None:\n                        on_poll()\n                except expected_exceptions:\n                    pass\n                except StopIteration:\n                    exc_info = sys.exc_info()\n                    raise NestedStopIteration(exc_info)\n                if result.result:\n                    cancel_sleep()\n                    return\n                if timeout.is_expired():\n>                   raise TimeoutExpired(timeout_seconds, waiting_for)\nE                   waiting.exceptions.TimeoutExpired: Timeout of 3 seconds expired waiting for records from EndUserSessions by: {'endUserId': 748}\n\n.venv/lib/python3.9/site-packages/waiting/__init__.py:56: TimeoutExpired"}, "start": 1648640660381, "stop": 1648640663888, "uuid": "dba2a8fa-bdb6-44f4-a47c-4b446f6bf15f", "historyId": "d851a1ba72c29579c8688ff01a30efdb", "testCaseId": "1445f63abc435b2def05975810b11c62", "fullName": "tests.enduser.test_login#test_login_with_password", "labels": [{"name": "parentSuite", "value": "tests.enduser"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "Elenas-MacBook-Pro.local"}, {"name": "thread", "value": "59719-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.enduser.test_login"}]}