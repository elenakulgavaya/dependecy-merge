{"name": "test_authorized", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "def test_authorized():\n        org = orgs_tbl.insert()\n        user = endusers_tbl.insert(org_id=org.Id.value)\n        s_time = endusers_tbl.insert_session(user_id=user.Id.value).LoginTime.value\n        s_token = session.encode_session(SessionData().build_from(user, s_time))\n>       GetAuth(session_token=s_token).request().verify(user_id=user.Id.value)\n\ntests/enduser/test_auth.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nqa/api/enduser/calls.py:20: in verify\n    self.verify_response(resp_body=resp_body)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <qa.api.enduser.calls.GetAuth object at 0x104010df0>, error_code = None\nresp_body = {'anonymous': False, 'id': 5171}, ignore_order = False, exclude_paths = None, normalize = False\n\n    def verify_response(self, error_code=None, resp_body=None,\n                        ignore_order=False, exclude_paths=None,\n                        normalize=False):\n        if error_code:\n            assert self.response.status_code == error_code, (\n                f'Unexpected code: {self.response.status_code}'\n            )\n        else:\n>           assert self.response.status_code == 200\nE           AssertionError\n\nqa/tools/caller.py:87: AssertionError"}, "start": 1648640656801, "stop": 1648640657276, "uuid": "c6e28764-7794-43c5-a9c9-42fbd2c0b6aa", "historyId": "9c0eb73b519d24b26ceccdeb28f224f8", "testCaseId": "831b9377f804724018d3261e03b9957f", "fullName": "tests.enduser.test_auth#test_authorized", "labels": [{"name": "parentSuite", "value": "tests.enduser"}, {"name": "suite", "value": "test_auth"}, {"name": "host", "value": "Elenas-MacBook-Pro.local"}, {"name": "thread", "value": "59719-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.enduser.test_auth"}]}